<Activity mc:Ignorable="sap sap2010" x:Class="Ex1_6_ExcelAutom" VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="1181,2798" sap2010:WorkflowViewState.IdRef="Ex1_6_ExcelAutom_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:ue="clr-namespace:UiPath.Excel;assembly=UiPath.Excel.Activities" xmlns:ueab="clr-namespace:UiPath.Excel.Activities.Business;assembly=UiPath.Excel.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:uix="http://schemas.uipath.com/workflow/activities/uix" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>System.Numerics</x:String>
      <x:String>UiPath.Excel.Activities.Business</x:String>
      <x:String>UiPath.Excel.Model</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Shared.Activities.Business</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>UiPath.UIAutomationNext.Activities</x:String>
      <x:String>UiPath.Platform.ObjectLibrary</x:String>
      <x:String>UiPath.Platform.SyncObjects</x:String>
      <x:String>System.Security</x:String>
      <x:String>UiPath.UIAutomationNext.Contracts</x:String>
      <x:String>UiPath.UIAutomationNext.Models.CV</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Runtime.Numerics</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Ex1_6_ExcelAutom" sap:VirtualizedContainerService.HintSize="766,2733" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="sd:DataTable" Name="dt_VegData" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Sequence DisplayName="Sequence-1_6bExcel" sap:VirtualizedContainerService.HintSize="704,2597" sap2010:WorkflowViewState.IdRef="Sequence_4">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ueab:ExcelProcessScopeX DisplayAlerts="{x:Null}" ExistingProcessAction="{x:Null}" FileConflictResolution="{x:Null}" LaunchMethod="{x:Null}" LaunchTimeout="{x:Null}" MacroSettings="{x:Null}" ProcessMode="{x:Null}" ShowExcelWindow="{x:Null}" DisplayName="Excel Process Scope" sap:VirtualizedContainerService.HintSize="642,3733" sap2010:WorkflowViewState.IdRef="ExcelProcessScopeX_1">
        <ueab:ExcelProcessScopeX.Body>
          <ActivityAction x:TypeArguments="ui:IExcelProcess">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="ui:IExcelProcess" Name="ExcelProcessScopeTag" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="608,3646" sap2010:WorkflowViewState.IdRef="Sequence_5">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ueab:ExcelApplicationCard Password="{x:Null}" ReadFormatting="{x:Null}" DisplayName="Use Excel File-Acquisitions" sap:VirtualizedContainerService.HintSize="546,57" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_1" ResizeWindow="None" WorkbookPath="Input\Acquisitions.xlsx">
                <ueab:ExcelApplicationCard.Body>
                  <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="ExcelAcquisitions" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="592,976" sap2010:WorkflowViewState.IdRef="Sequence_6">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ueab:RemoveDuplicatesX DisplayName="Remove Duplicates" sap:VirtualizedContainerService.HintSize="530,245" sap2010:WorkflowViewState.IdRef="RemoveDuplicatesX_1" Range="[ExcelAcquisitions.Sheet(&quot;Acquisitions&quot;)]">
                        <ueab:RemoveDuplicatesX.Columns>
                          <scg:List x:TypeArguments="InArgument(x:String)" Capacity="1">
                            <InArgument x:TypeArguments="x:String">Doc. Number</InArgument>
                          </scg:List>
                        </ueab:RemoveDuplicatesX.Columns>
                      </ueab:RemoveDuplicatesX>
                      <ueab:ExcelApplicationCard Password="{x:Null}" ReadFormatting="{x:Null}" DisplayName="Use Excel File" sap:VirtualizedContainerService.HintSize="530,643" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_2" ResizeWindow="None" WorkbookPath="Output\MonthReport.xlsx">
                        <ueab:ExcelApplicationCard.Body>
                          <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="ExcelMonthReport" />
                            </ActivityAction.Argument>
                            <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="496,351" sap2010:WorkflowViewState.IdRef="Sequence_7">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ueab:CopyPasteRangeX DestinationRange="[ExcelMonthReport.Sheet(&quot;Acquisitions&quot;)]" DisplayName="Copy/Paste Range" sap:VirtualizedContainerService.HintSize="434,263" sap2010:WorkflowViewState.IdRef="CopyPasteRangeX_1" PasteOptions="All" SourceRange="[ExcelAcquisitions.Sheet(&quot;Acquisitions&quot;)]" Transpose="False" />
                            </Sequence>
                          </ActivityAction>
                        </ueab:ExcelApplicationCard.Body>
                      </ueab:ExcelApplicationCard>
                    </Sequence>
                  </ActivityAction>
                </ueab:ExcelApplicationCard.Body>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ueab:ExcelApplicationCard>
              <ueab:ExcelApplicationCard Password="{x:Null}" ReadFormatting="{x:Null}" DisplayName="Use Excel File-Sales" sap:VirtualizedContainerService.HintSize="546,437" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_4" ResizeWindow="None" WorkbookPath="Input\Sales.xlsx">
                <ueab:ExcelApplicationCard.Body>
                  <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="ExcelSales" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="416,136" sap2010:WorkflowViewState.IdRef="Sequence_9">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ueab:ExcelApplicationCard Password="{x:Null}" ReadFormatting="{x:Null}" DisplayName="Use Excel File" sap:VirtualizedContainerService.HintSize="354,48" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_3" ResizeWindow="None" WorkbookPath="Output\MonthReport.xlsx">
                        <ueab:ExcelApplicationCard.Body>
                          <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="ExcelMonthReport" />
                            </ActivityAction.Argument>
                            <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="496,351" sap2010:WorkflowViewState.IdRef="Sequence_8">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ueab:CopyPasteRangeX DestinationRange="[ExcelMonthReport.Sheet(&quot;Sales&quot;)]" DisplayName="Copy/Paste Range" sap:VirtualizedContainerService.HintSize="434,263" sap2010:WorkflowViewState.IdRef="CopyPasteRangeX_2" PasteOptions="All" SourceRange="[ExcelSales.Sheet(&quot;Sales&quot;)]" Transpose="False" />
                            </Sequence>
                          </ActivityAction>
                        </ueab:ExcelApplicationCard.Body>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ueab:ExcelApplicationCard>
                    </Sequence>
                  </ActivityAction>
                </ueab:ExcelApplicationCard.Body>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ueab:ExcelApplicationCard>
              <ueab:ExcelApplicationCard Password="{x:Null}" ReadFormatting="{x:Null}" DisplayName="Use Excel File" sap:VirtualizedContainerService.HintSize="546,3064" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_5" ResizeWindow="None" WorkbookPath="Output\MonthReport.xlsx">
                <ueab:ExcelApplicationCard.Body>
                  <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="ExcelMonthlyReport" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="512,2772" sap2010:WorkflowViewState.IdRef="Sequence_10">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ueab:InsertColumnX ColumnFormat="{x:Null}" DisplayName="Insert Column" HasHeaders="True" sap:VirtualizedContainerService.HintSize="450,240" sap2010:WorkflowViewState.IdRef="InsertColumnX_1" NewColumnName="Total Sales" Range="[ExcelMonthlyReport.Sheet(&quot;Sales&quot;)]" RelativeColumnName="Agent Name" RelativePosition="After" />
                      <ueab:InsertColumnX ColumnFormat="{x:Null}" DisplayName="Insert Column" HasHeaders="True" sap:VirtualizedContainerService.HintSize="450,240" sap2010:WorkflowViewState.IdRef="InsertColumnX_2" NewColumnName="Profit Per Sale" Range="[ExcelMonthlyReport.Sheet(&quot;Sales&quot;)]" RelativeColumnName="Total Sales" RelativePosition="After" />
                      <ueab:ExcelForEachRowX DisplayName="For Each Excel Row" EmptyRowBehavior="Stop" HasHeaders="True" sap:VirtualizedContainerService.HintSize="450,57" sap2010:WorkflowViewState.IdRef="ExcelForEachRowX_1" Range="[ExcelMonthlyReport.Sheet(&quot;Sales&quot;)]" SaveAfterEachRow="False">
                        <ueab:ExcelForEachRowX.Body>
                          <ActivityAction x:TypeArguments="ue:CurrentRowQuickHandle, x:Int32">
                            <ActivityAction.Argument1>
                              <DelegateInArgument x:TypeArguments="ue:CurrentRowQuickHandle" Name="CurrentRow" />
                            </ActivityAction.Argument1>
                            <ActivityAction.Argument2>
                              <DelegateInArgument x:TypeArguments="x:Int32" Name="CurrentIndex" />
                            </ActivityAction.Argument2>
                            <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="496,753" sap2010:WorkflowViewState.IdRef="Sequence_11">
                              <Sequence.Variables>
                                <Variable x:TypeArguments="x:Object" Name="VlookUpValue" />
                              </Sequence.Variables>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ueab:VLookupX ColumnIndex="3" DisplayName="VLookup" ExactMatch="True" sap:VirtualizedContainerService.HintSize="434,292" sap2010:WorkflowViewState.IdRef="VLookupX_2" Label="[CurrentRow.ByField(&quot;Doc. Number&quot;)]" SourceRange="[ExcelMonthlyReport.Sheet(&quot;Acquisitions&quot;)]">
                                <ueab:VLookupX.Value>
                                  <OutArgument x:TypeArguments="x:Object">[VlookUpValue]</OutArgument>
                                </ueab:VLookupX.Value>
                              </ueab:VLookupX>
                              <ueab:WriteCellX AutoIncrementRow="True" Cell="[CurrentRow.ByField(&quot;Total Sales&quot;)]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="434,191" sap2010:WorkflowViewState.IdRef="WriteCellX_1" Value="[CDbl(VlookUpValue)+CDbl(VlookUpValue)*0.2]" />
                              <ueab:WriteCellX AutoIncrementRow="True" Cell="[CurrentRow.ByField(&quot;Profit Per Sale&quot;)]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="434,182" sap2010:WorkflowViewState.IdRef="WriteCellX_2" Value="[CDbl(VlookUpValue)*0.2]" />
                            </Sequence>
                          </ActivityAction>
                        </ueab:ExcelForEachRowX.Body>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ueab:ExcelForEachRowX>
                      <Sequence DisplayName="Sequence-Formatting" sap:VirtualizedContainerService.HintSize="450,1336" sap2010:WorkflowViewState.IdRef="Sequence_13">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <uix:NClick ActivateBefore="True" ClickType="Single" DisplayName="Click 'Format as Table'" sap:VirtualizedContainerService.HintSize="388,225" sap2010:WorkflowViewState.IdRef="NClick_1" InScope="[ExcelMonthlyReport]" KeyModifiers="None" MouseButton="Left" ScopeIdentifier="ExcelMonthlyReport" Version="V3">
                          <uix:NClick.Target>
                            <uix:TargetAnchorable ContentHash="uZCy3JgwtU2G5yWJfLyjkg" DesignTimeRectangle="793, 83, 57, 76" DesignTimeScaleFactor="1" FullSelectorArgument="&lt;uia cls='MsoCommandBar' helpText='Ribbon toolbar' /&gt;&lt;uia cls='NetUIOrderedGroup' name='Home' /&gt;&lt;uia cls='NetUIChunk' name='Styles' /&gt;&lt;uia automationid='FormatAsTableGallery' cls='NetUIAnchor' name='Format as Table' /&gt;" FuzzySelectorArgument="&lt;uia cls='MsoCommandBar' helpText='Ribbon toolbar' /&gt;&lt;uia cls='NetUIOrderedGroup' name='Home' /&gt;&lt;uia cls='NetUIChunk' name='Styles' /&gt;&lt;uia automationid='FormatAsTableGallery' cls='NetUIAnchor' name='Format as Table' role='Menu Item' check:fulltext='Format as Table' /&gt;" Guid="8c3e6f31-2bd5-40c0-af40-b214a266ed6d" ImageBase64="iVBORw0KGgoAAAANSUhEUgAAAD0AAABQCAYAAACqCH1tAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAReSURBVHhe7ZdNSFVBFMfdtiooiDbSwk3bVuLGRemytCCo505KpKAyUyLERUW6kswi0IVh5EdtNAXBD4wSDbVPDJVykRlYmRZYZC8m/9M9t+M07+ve+67veecPh3vne35zzsydmyECKAMdFBnooMhAB0UGOigy0E6Uk5Ptq3khT6BXV1ej2oXKcm0+t3jqGGgXMtBOZKAjmFfQBQUHrFHdKW2gw+GwNaJ7eQKNCUezjOJOx7b9dK/ofPZBjtXR0S4KCw+KUOioTDuVL57G5C8Nfo5qujoNI1/E0vewWFhYEGVlZ0VJyQkxOjoi8vP3W6M7U8pCN08sS+Dx8TFRVHRM1NRclX3V118T1dVV1ujOlJLQd54uyb4BnJe3T7S23pX9TE5OysNsenpaljtVykFHAoYhxBsarstyN0opaA6MA2tgYMDuo6mp0fUBRkoZ6N2VA7I/ACOEcWBRezq83IY1yRNo3WeKG6Cj2c5zfeL53Dc7pLu6Om3g+fl56fWenm5rRPfacE/TZ0m3h2H4TNE+PnRzTD7dakOhYwFXVV20P0+Db1dkP15oQ6DrHi+Key+/SmDsUx0wHVy4mEx9/ClqHy6mLzSd0BCAAKYCI40LCcrnln9JYLRNS2gCru+flXdq5G871S3K21/ZdTnw8o/f4sbokr1gaQcNbyGcbw+/E1tKe8ThptcS5HjHrDy9AY4rJoW0Cpxy0LEMkz1/f0rW33Gm1wYmA/jWkw9s4NlPKyKzol+2U80LuYZORMXNL0Tm2iWEA5MBCMB+yBdoeA7fWIRxWdf7/4DheUSAX0oqdGnLmmetMN1T/UgLjNDeVd4nDze/lHRPI6RxcO29MrJuL4daZkR27RNZdrnbmzt1vPIlvIffLIqixom1n4p/hxMi4MitcVnmt3w9yFJFBjooMtBBkYEmZWVlrbO6ujqrZHMoIvTMzIyV2jglax4GmhRpMOShjKytrc0q+dumoqJCPik9NDS0ri6M0nzLhEIhOx99QJTmeVy6NhDP5/PjimtPY/JQbm6u3REtAC0O3jkI0pgARPA0OUrrpPapW3xVVA9z0y2Qqrg9rZsooGgR1DZI02JBunJK8wjg7dQ2XLo2qIv3WAdvUqHjScN4v4imWNDR2kCARjnP40poTyOfIGlgqqe2iTeNianbgEPrJh6tDQngkTzu6iDjA6ltEknDU0gDhHsN+xP5un2qa6OGfCRpoTe7DHRQZKCDIgMdFCUEjW8i/w6SRboEoIx/m7milSVbjj0dz6QNtKK0h+Zhz6+MSPOrId8GSFN7PKkOrpSq1Pu1mk5Unnua5+OdfgwIjJfRO0DpHYuku2sTaKw/qHjkCbR60acJ8ToQFoD+0qiMYLjRQqmium6AIdfQMLyT+F8S1SFFgtaFdDLlGhqTJs+onsA77WMqo0VQ32kx/JAn4Q1PIQ141dP0T6yC8fa0IGS6Pe2lHEOnswx0UGSggyIDHRQZ6KDIQAdFAYQW4g9JFJvT6sUKlQAAAABJRU5ErkJggg==" InformativeScreenshot="42121850b017138fcfb72d3dc4b24233.png" Reference="s2P0fQ_LhEyJHjNP2bEY2A/XnwBMAvKiU2tL01i-3pwXQ" ScopeSelectorArgument="&lt;wnd app='excel.exe' cls='XLMAIN' title='MonthReport - Excel' /&gt;" SearchSteps="Selector, FuzzySelector" Version="V4" Visibility="Interactive" />
                          </uix:NClick.Target>
                          <uix:NClick.VerifyOptions>
                            <uix:VerifyExecutionOptions DisplayName="{x:Null}" Mode="Appears">
                              <uix:VerifyExecutionOptions.Retry>
                                <InArgument x:TypeArguments="x:Boolean" />
                              </uix:VerifyExecutionOptions.Retry>
                              <uix:VerifyExecutionOptions.Timeout>
                                <InArgument x:TypeArguments="x:Double" />
                              </uix:VerifyExecutionOptions.Timeout>
                            </uix:VerifyExecutionOptions>
                          </uix:NClick.VerifyOptions>
                        </uix:NClick>
                        <uix:NKeyboardShortcuts ActivateBefore="True" ClickBeforeMode="None" DelayBefore="3" DisplayName="Keyboard Shortcuts" sap:VirtualizedContainerService.HintSize="388,264" sap2010:WorkflowViewState.IdRef="NKeyboardShortcuts_1" InScope="[ExcelMonthlyReport]" ScopeIdentifier="ExcelMonthlyReport" Shortcuts="[d(hk)][k(Down)][u(hk)][d(hk)][k(Right)][u(hk)][d(hk)][k(Down)][u(hk)][d(hk)][k(NumEnter)][u(hk)]" Version="V3">
                          <uix:NKeyboardShortcuts.VerifyOptions>
                            <uix:VerifyExecutionOptions DisplayName="{x:Null}" Mode="Appears">
                              <uix:VerifyExecutionOptions.Retry>
                                <InArgument x:TypeArguments="x:Boolean" />
                              </uix:VerifyExecutionOptions.Retry>
                              <uix:VerifyExecutionOptions.Timeout>
                                <InArgument x:TypeArguments="x:Double" />
                              </uix:VerifyExecutionOptions.Timeout>
                            </uix:VerifyExecutionOptions>
                          </uix:NKeyboardShortcuts.VerifyOptions>
                        </uix:NKeyboardShortcuts>
                        <uix:NTypeInto ActivateBefore="True" ClickBeforeMode="None" DelayBefore="3" DeselectAfter="False" DisplayName="Type Into '$K$15'" EmptyFieldMode="MultiLine" sap:VirtualizedContainerService.HintSize="388,286" sap2010:WorkflowViewState.IdRef="NTypeInto_1" InScope="[ExcelMonthlyReport]" InteractionMode="Simulate" ScopeIdentifier="ExcelMonthlyReport" Text="$A$1:$E$101" Version="V3">
                          <uix:NTypeInto.Target>
                            <uix:TargetAnchorable ContentHash="sTGapJC9iUunaTn36sLdsQ" DesignTimeRectangle="14, 54, 200, 21" DesignTimeScaleFactor="1" FullSelectorArgument="&lt;uia cls='NetUIRefedit' name='Where is the data for your table?' /&gt;" FuzzySelectorArgument="&lt;uia cls='NetUIRefedit' name='Where is the data for your table?' role='Edit Box' automationid='' check:text='$K$15' /&gt;" Guid="91f24328-dabc-45de-952c-5996b925a57c" ImageBase64="iVBORw0KGgoAAAANSUhEUgAAAMwAAAAZCAYAAAB90cFuAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAHQSURBVHhe7ZjLbYQwFABZF0ddnGgm4pQOONDHdkAHDjbrxTa2AZuE3c2MNBKBlyiHN+JTjeMoEXGfBIN4wGcwX903IkYMBgPw7nRdd7oEAx+LWvD7/X6aBAMfzWXBDMNwiVVVPf4DgOPYwZRAMPAv2BPM7XbTpsgPpm9k07pLnfTovCfBQAlbwZhYtqLJC6at9QLP1rLVS93KuhKy6ecFb+vpWt0m5h9OIQnvnP5db14dA+SSCsaPxRgiIxgVxrTEqzuGFYwKxMQSne9lI6YghPCCUeeX8IwEAyXEggmFYuvzC8E8rjvnQ/Pe9efPBAPnsxVM6tgmI5hB9o3QC1wHghGBZQ/PG0PBLI9koun1eYKBEmLB2MQisckKRqvfPdQjVSN7fU4tvrvkjqt5ox+Mf20OkGCghJcIRj1iqRf0+c5hlntZcmf5V/PGVDDLPMFACS8SzPz45AYzHauXfv9Ospo3poJZ/ibBQAl7gtnD8WDMo5XR+Rq23Fn0p2EVTXTejsIKxps3caljgFxiwZi7Skyf48FYix3+6hXx6LwnwUAJ191hAsv8FxIMlHBZMADviB3MGRIMfDQEA3AAteBnGw0GEcOugkHEbQkGcbej/AE8jV0CTsH50wAAAABJRU5ErkJggg==" InformativeScreenshot="74be79a115a928d398eaf2fda6739456.png" Reference="s2P0fQ_LhEyJHjNP2bEY2A/nfP2s130fEiWCSuXT9vrcQ" ScopeSelectorArgument="&lt;wnd app='excel.exe' cls='NUIDialog' title='Create Table' /&gt;" SearchSteps="Selector, FuzzySelector" Version="V4" Visibility="Interactive" />
                          </uix:NTypeInto.Target>
                          <uix:NTypeInto.VerifyOptions>
                            <uix:VerifyExecutionTypeIntoOptions DisplayName="{x:Null}" Mode="Appears">
                              <uix:VerifyExecutionTypeIntoOptions.Retry>
                                <InArgument x:TypeArguments="x:Boolean" />
                              </uix:VerifyExecutionTypeIntoOptions.Retry>
                              <uix:VerifyExecutionTypeIntoOptions.Timeout>
                                <InArgument x:TypeArguments="x:Double" />
                              </uix:VerifyExecutionTypeIntoOptions.Timeout>
                            </uix:VerifyExecutionTypeIntoOptions>
                          </uix:NTypeInto.VerifyOptions>
                        </uix:NTypeInto>
                        <uix:NClick ActivateBefore="True" ClickType="Single" DelayBefore="3" DisplayName="Click 'My table has headers'" sap:VirtualizedContainerService.HintSize="388,225" sap2010:WorkflowViewState.IdRef="NClick_3" InScope="[ExcelMonthlyReport]" KeyModifiers="None" MouseButton="Left" ScopeIdentifier="ExcelMonthlyReport" Version="V3">
                          <uix:NClick.Target>
                            <uix:TargetAnchorable ContentHash="Pr7B4RibN0KtKaUkpjh0TQ" DesignTimeRectangle="14, 78, 131, 16" DesignTimeScaleFactor="1" ElementType="CheckBox" FullSelectorArgument="&lt;uia cls='NetUICheckbox' name='My table has headers' /&gt;" FuzzySelectorArgument="&lt;uia cls='NetUICheckbox' name='My table has headers' role='CheckBox' automationid='' check:fulltext='My table has headers' /&gt;" Guid="8a56fd6f-fcda-4aff-b45f-bfb642c9dc62" InformativeScreenshot="c030380ea92c80aba62bbcfbeb2efc90.png" Reference="s2P0fQ_LhEyJHjNP2bEY2A/43l3qJHta0yiB9G7SUhChg" ScopeSelectorArgument="&lt;wnd app='excel.exe' cls='NUIDialog' title='Create Table' /&gt;" SearchSteps="Selector, FuzzySelector" Version="V4" Visibility="Interactive" />
                          </uix:NClick.Target>
                          <uix:NClick.VerifyOptions>
                            <uix:VerifyExecutionOptions DisplayName="{x:Null}" Mode="Appears">
                              <uix:VerifyExecutionOptions.Retry>
                                <InArgument x:TypeArguments="x:Boolean" />
                              </uix:VerifyExecutionOptions.Retry>
                              <uix:VerifyExecutionOptions.Timeout>
                                <InArgument x:TypeArguments="x:Double" />
                              </uix:VerifyExecutionOptions.Timeout>
                            </uix:VerifyExecutionOptions>
                          </uix:NClick.VerifyOptions>
                        </uix:NClick>
                        <uix:NClick ActivateBefore="True" ClickType="Single" DisplayName="Click 'OK'" sap:VirtualizedContainerService.HintSize="388,216" sap2010:WorkflowViewState.IdRef="NClick_4" InScope="[ExcelMonthlyReport]" InteractionMode="Simulate" KeyModifiers="None" MouseButton="Left" ScopeIdentifier="ExcelMonthlyReport" Version="V3">
                          <uix:NClick.Target>
                            <uix:TargetAnchorable ContentHash="-xGuAkQYHUKrJ2rBrp8k9g" DesignTimeRectangle="55, 97, 75, 23" DesignTimeScaleFactor="1" ElementType="Button" FullSelectorArgument="&lt;uia cls='NetUIButton' name='OK' /&gt;" FuzzySelectorArgument="&lt;uia cls='NetUIButton' name='OK' role='Button' automationid='' check:fulltext='OK' /&gt;" Guid="129c668a-3033-4857-8389-87ead14a20ba" InformativeScreenshot="e8fef5a61ffe9b62215dd29c30366696.png" Reference="s2P0fQ_LhEyJHjNP2bEY2A/TIGgE3sjKU-1K11xnlpnDg" ScopeSelectorArgument="&lt;wnd app='excel.exe' cls='NUIDialog' title='Create Table' /&gt;" SearchSteps="Selector, FuzzySelector" Version="V4" Visibility="Interactive" />
                          </uix:NClick.Target>
                          <uix:NClick.VerifyOptions>
                            <uix:VerifyExecutionOptions DisplayName="{x:Null}" Mode="Appears">
                              <uix:VerifyExecutionOptions.Retry>
                                <InArgument x:TypeArguments="x:Boolean" />
                              </uix:VerifyExecutionOptions.Retry>
                              <uix:VerifyExecutionOptions.Timeout>
                                <InArgument x:TypeArguments="x:Double" />
                              </uix:VerifyExecutionOptions.Timeout>
                            </uix:VerifyExecutionOptions>
                          </uix:NClick.VerifyOptions>
                        </uix:NClick>
                      </Sequence>
                      <ueab:CreatePivotTableXv2 DestinationRange="[ExcelMonthlyReport.Sheet(&quot;PivotSheet&quot;)]" DisplayName="Create Pivot Table" sap:VirtualizedContainerService.HintSize="450,554" sap2010:WorkflowViewState.IdRef="CreatePivotTableXv2_1" LayoutRowType="Compact" Range="[ExcelMonthlyReport.Sheet(&quot;Sales&quot;)]" TableName="PivotTable" ValuesMode="Columns">
                        <ueab:CreatePivotTableXv2.Body>
                          <ActivityAction>
                            <Sequence DisplayName="Do" sap2010:WorkflowViewState.IdRef="Sequence_14">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ueab:PivotTableFieldX DisplayName="Pivot Field" FieldName="Agent Name" Function="Sum" sap:VirtualizedContainerService.HintSize="382,95" sap2010:WorkflowViewState.IdRef="PivotTableFieldX_1" Type="Row" />
                              <ueab:PivotTableFieldX DisplayName="Pivot Field" FieldName="Total Sales" Function="Sum" sap:VirtualizedContainerService.HintSize="382,95" sap2010:WorkflowViewState.IdRef="PivotTableFieldX_2" Type="Value" />
                              <ueab:PivotTableFieldX DisplayName="Pivot Field" FieldName="Profit Per Sale" Function="Sum" sap:VirtualizedContainerService.HintSize="382,95" sap2010:WorkflowViewState.IdRef="PivotTableFieldX_3" Type="Value" />
                            </Sequence>
                          </ActivityAction>
                        </ueab:CreatePivotTableXv2.Body>
                      </ueab:CreatePivotTableXv2>
                      <ueab:InsertExcelChartX InsertedChart="{x:Null}" ChartCategory="Pie" ChartHeight="211" ChartType="xlPie" ChartWidth="355" DisplayName="Insert Chart" sap:VirtualizedContainerService.HintSize="450,257" sap2010:WorkflowViewState.IdRef="InsertExcelChartX_1" InsertIntoSheet="[ExcelMonthlyReport.Sheet(&quot;PivotSheet&quot;)]" Left="60" Range="[ExcelMonthlyReport.Sheet(&quot;PivotSheet&quot;)]" Top="20" />
                    </Sequence>
                  </ActivityAction>
                </ueab:ExcelApplicationCard.Body>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ueab:ExcelApplicationCard>
            </Sequence>
          </ActivityAction>
        </ueab:ExcelProcessScopeX.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ueab:ExcelProcessScopeX>
    </Sequence>
    <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="704,48" sap2010:WorkflowViewState.IdRef="CommentOut_1">
      <ui:CommentOut.Body>
        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="512,136" sap2010:WorkflowViewState.IdRef="Sequence_12">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Sequence DisplayName="Sequence-1_6aWorkbook" sap:VirtualizedContainerService.HintSize="450,48" sap2010:WorkflowViewState.IdRef="Sequence_3">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:ReadRange AddHeaders="True" DataTable="[dt_VegData]" DisplayName="Read Range Workbook" sap:VirtualizedContainerService.HintSize="530,120" sap2010:WorkflowViewState.IdRef="ReadRange_1" SheetName="Tracker" WorkbookPath="Input\VegetablesProduction.xlsx">
              <ui:ReadRange.Range>
                <InArgument x:TypeArguments="x:String">
                  <Literal x:TypeArguments="x:String" Value="" />
                </InArgument>
              </ui:ReadRange.Range>
            </ui:ReadRange>
            <ui:AddDataColumn x:TypeArguments="x:Object" AllowDBNull="{x:Null}" AutoIncrement="{x:Null}" Column="{x:Null}" DefaultValue="{x:Null}" MaxLength="{x:Null}" Unique="{x:Null}" ColumnName="Estimated Value" DataTable="[dt_VegData]" DisplayName="Add Data Column" sap:VirtualizedContainerService.HintSize="530,218" sap2010:WorkflowViewState.IdRef="AddDataColumn`1_1" />
            <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[dt_VegData]" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="530,389" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
              <ui:ForEachRow.Body>
                <ActivityAction x:TypeArguments="sd:DataRow">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="496,193" sap2010:WorkflowViewState.IdRef="Sequence_2">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign sap:VirtualizedContainerService.HintSize="434,105" sap2010:WorkflowViewState.IdRef="Assign_1">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Object">[CurrentRow("Estimated Value")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Object">[Math.Round((CInt(CurrentRow("Quantity"))*CDbl(CurrentRow("Price per Kg"))),2).ToString]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                </ActivityAction>
              </ui:ForEachRow.Body>
            </ui:ForEachRow>
            <ui:WriteRange StartingCell="{x:Null}" AddHeaders="True" DataTable="[dt_VegData]" DisplayName="Write Range Workbook" sap:VirtualizedContainerService.HintSize="530,139" sap2010:WorkflowViewState.IdRef="WriteRange_1" SheetName="UpdatedData" WorkbookPath="Input\VegetablesProduction.xlsx" />
          </Sequence>
        </Sequence>
      </ui:CommentOut.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:CommentOut>
  </Sequence>
</Activity>